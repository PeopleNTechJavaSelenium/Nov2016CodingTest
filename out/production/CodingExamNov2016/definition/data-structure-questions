Please answer the below Data Structure Questions:

why do we need data structure?
List out the areas in which data structures are applied extensively?
what is an Array?
what is the difference between the Array and ArrayList?
what is LinkedList?
what is queue?
what is stack?
what is FIFO and LIFO?
what is the order of complexity?
what is the best case to search an element from an array?
what is the worst case to search an element from an array?
what is tree in data structure?
what is graph in data structure?
what is the difference between the HashTable and HashMap?
What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
How HashMap works in java?
What is ArrayIndexOutOfBoundsException in java? When it occurs?
What are the different ways of copying an array into another array?
What is difference between an array and a linked list?
What is DFS and BFS?
What is Recursion?
What is Big-(O)-notation?
Outlined different kind of sorting algorithm with time complexity?

Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.


ANSWERS

why do we need data structure?
Data Structures are used to not only store different types of data, e.g. integer or characters, but also to perform various functions on it. It is a specialized format for organizing and storing data. General data structure types include the array, the file, the record, the table, the tree, and so on. Any data structure is designed to organize data to suit a specific purpose so that it can be accessed and worked with in appropriate ways.

List out the areas in which data structures are applied extensively?


what is an Array?
An array is a data structure that contains a group of elements. Typically these elements are all of the same data type, such as an integer or string.

what is the difference between the Array and ArrayList?
Difference between Array and ArrayList in java  include eight points namely Resizable, Performance, Traversal ,Primitives , Length , Type-Safety, Adding elements , Multi-dimensional.

what is LinkedList?
A linked list is a linear data structure where each element is a separate object.

what is queue?
A Queue is a collection for holding elements prior to processing. Besides basic Collection operations, queues provide additional insertion, removal, and inspection operations.

what is stack?
A stack is a data structure that allows data to be inserted (a 'push' operation), and removed (a 'pop' operation). Many stacks also support a read ahead (a 'peek' operation), which reads data without removing it. A stack is a LIFO-queue, meaning that the last data to be inserted will be the first data to be removed.

what is FIFO and LIFO?
FIFO means First In First Out, and LIFO means Last In First Out

what is the order of complexity?
Order of complexity or Big O notation is used in Computer Science to describe the performance or complexity of an algorithm. Big O specifically describes the worst-case scenario, and can be used to describe the execution time required or the space used (e.g. in memory or on disk) by an algorithm.

what is the best case to search an element from an array?
The best case to search for an element in an array would be the first element in the array i.e. array[0].

what is the worst case to search an element from an array?
Worst case would be the most time consumed for accessing and element in the array, or the last element after going through the entire array i.e. array[n].

what is tree in data structure?
Trees are extensions of LinkedList structure and each node connects to multiple nodes.

what is graph in data structure?
A graph is an object consisting of a vertex set and an edge set.

what is the difference between the HashTable and HashMap?
1. HashTable is synchronized, whereas HashMap is not. This makes HashMap better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones.
2. HashTable does not allow null keys or values. HashMap allows one null key and any number of null values.
3. One of HashMap's subclasses is LinkedHashMap, so in the event that one would want predictable iteration order (which is insertion order by default), one could easily swap out the HashMap for a LinkedHashMap.

What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
RDBMS:
—Indexes
—Row Data
—Blob Data

Network Data Model: The basic data modeling construct in the network model is the set construct. A set consists of an owner record type, a set name, and a member record type.

Hierarchical Data Model: The hierarchical data model organizes data in a tree structure.

How HashMap works in java?
HashMap maintains key and value pairs and often denoted as HashMap<Key, Value> or HashMap<K, V>. HashMap implements Map interface.

What is ArrayIndexOutOfBoundsException in java? When it occurs?
It occurs when trying to access array with illegal index

What are the different ways of copying an array into another array?
Depending on the type of copy, Shallow or Deep, various methods are available. Assigning value of old array to new array would not copy the elements. Then for deep copying, one could use own created algorithm(using loop, etc) or use API function (arraycopy).

What is difference between an array and a linked list?
Array: An array assumes every element is exactly the same size. An array's size needs to be known ahead of time, or re-created when it needs to grow. Shuffling an array is more complicated and/or takes more memory.  Linked List It's easier to store data of different sizes in a linked list. it's easier for a linked list to grow organically. Shuffling a linked list is just a matter of changing what points to what.

What is DFS and BFS?
DFS (Depth First Search) and BFS (Breadth First Search) are search algorithms used for graphs and trees.

What is Recursion?
Recursion in computer science is a method where the solution to a problem depends on solutions to smaller instances of the same problem (as opposed to iteration).

What is Big-(O)-notation?
A theoretical measure of the execution of an algorithm, usually the time or memory needed, given the problem size n, which is usually the number of items.

                                                                                                 Outlined different kind of sorting algorithm with time complexity?
                                                                                                 Algorithm	Best Time	Worst Time
                                                                                                 Insertion Sort	Ω(n)		O(n^2)
                                                                                                 Quick Sort	Ω(n log(n))	O(n^2)
                                                                                                 Merge Sort	Ω(n log(n))	O(n log(n))
                                                                                                 Bubble Sort	Ω(n)		O(n^2)

                                                                                                 Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
                                                                                                   a)In terms of Accessing element.
                                                                                                   b)In terms of Inserting element.
                                                                                                   c)In terms of Searching element.
                                                                                                   d)In terms of Removing element.

                                                                                                 Data Structure			Average			            	Worst
                                                                                                 ______________________________________________________________________________________
                                                                                                 		    Access	Search	Insert	Delete		Access	Search	Insert	Delete
                                                                                                 Array		 Θ(1)	 Θ(n)	 Θ(n)	 Θ(n)		 O(1)	 O(n)	 O(n)	 O(n)
                                                                                                 Stack		 Θ(n)	 Θ(n)	 Θ(1)	 Θ(1)		 O(n)	 O(n)	 O(1)	 O(1)
                                                                                                 Queue		 Θ(n)	 Θ(n)	 Θ(1)	 Θ(1)		 O(n)	 O(n)	 O(1)	 O(1)
                                                                                                 Hash Table	 N/A	 Θ(1)	 Θ(1)	 Θ(1)		 N/A	 O(n)	 O(n)	 O(n)
                                                                                                 Linked List	 Θ(n)	 Θ(n)	 Θ(1)	 Θ(1)		 O(n)	 O(n)	 O(1)	 O(1)
                                                                                                 (Single)