Please answer the below core-java Questions:


What jdk contains or composed of and define each components?
Ans: Java Development Kit is software to write the program.
     (Includes: javac, Java Interpreter, Java Disassembler, java doc, debugger, JVM)
     Definitions:
          Java Compiler - converts source code into java bytecode
          Java Interpreter - interprets class file generated by compiler
          Java Disassembler - disassembles class file
          Java Documentation - creates documentation from source code comment
          Java Debugger - tests and debug java program
          Java Virtual Machine - JVM runs the byte codes, any device has JVM can run the byte code.

What is IDE?
Ans: Integrated Development Environment

What are the IDEs available in the market to support java?
Ans:    NetBeans
        Eclipse
        IntelliJ

Explain the entire java life cycle.
Ans: Edit > Source code (.java) > Java compiler (javac) > Bytecodes (.Class) > JVM > run

what is class?
Ans: A class is a blueprint for an object

What is object?
Ans: An object is an instance of class where it define the characteristics of the class.  All the object lives in Heap (unique address- which is a memory address)

What is the entry point of an application?
Ans: The "main" method is the entry point of an application in java

Why main is static?
Ans: The main method is static because it can be initiated without creating an object. When it pass though JVM it will know that this class is static and it will pass without an error/ or ask to creating an object.

What is the difference between an Interface and Abstract class?
Ans: In interface class, you can't implement any method (you can ONLY declare a method).
     but in abstract class you are allowed to implement non-abstract methods.
     Also you can implements multiple times but you can extends only once.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
Ans: Java don’t allow to make an Object from an Interface ( In interface you can ONLY declare a method).
     But it allow us to create an object from an Abstract class.
     So we have to implement the abstract method from interface in the Abstract class to use it.
     However, those object always refer to the concrete class where the Abstract class has been extended.

what is Access Specifier?
Ans:  (public, private, protected or default- will take the Public)

What is OOP ? Define each feature of java OOP.
Ans: OOp is, Object Oriented Program.
1)Abstraction: Implementation hiding.
In Interface, you are not allowed to implement any method but in Abstract class you can implement non-abstract
method and declare abstract method.

Interface ---> Abstract class can not be instantiated.
Interface you can only declare a method
Interface---> Abstract class----->Concrete Class.
Ex. Abacus   ---> Calculator----->DesktopComputer
Ex. GrandFather---->Father------>GrandSon

2) Encapsulation: data hiding.
     Private variables, getter and setter method for the constructors.

3) Inheritance: acquire the properties from one class to another.
 Ex. Grandfather--->Father----->GrandSon

4) Polymorphism: The ability of an object to take on many forms.
   Two kinds of polymorphism:
    Method overloading: happens in Compile time
`   Method overriding : happens in Run time.

What is API? Name list of API that you have used so far.
Ans: Java application programming interface (API) is a list of all classes that are part of the
     Java development kit (JDK). It includes all Java packages, classes, and interfaces, along with their methods, fields, and constructors.
     Example: ArrayList, Map, Scanner, Random etc.

Does java support multiple inheritance?
Ans:  No, you can extends only once in a class.
      However, it supports multiple inheritance in case of Interface.
      We can use that to achieve multiple inheritance in Java.

What is method overloading and when it happens?
Ans: Method Overloading is a feature that allows a class to have two or more methods having same name,
     if their argument lists are different.Overloading happens at compile-time

What is method overriding and when it happens?
Ans: Declaring a method name in subclass which is already present in parent class is known as method overriding because of their same name.
     Method Overriding happens in run time.

Explain exceptions in java and how to handle it.
Ans: Exceptions are objects in Java. During the compilation if the exception of a program that disrupts the normal flow of instruction.
     We can use built-in try/catch block to find the exception and find the error message.

What is static keyword in java? How it has been used in variables and methods ?
Ans:  Static gives you access to the method or variable without creating an object.

What Is final and how it has been used variables and methods?
Ans: Final in variable: You must initialize the value right away. It becomes a constant and you can not change the value of it.
     Final in method: For method final means you can’t change the logic from the child class

What is final, finally and finalize?
Ans: Final can be used to mark a variable "unchangeable"
     Finally is used in a try/catch statement to execute code "always"
     Finalize is called when an object is garbage collected.

What is a constructor ?
Ans: The purouse of constructor is to initialize an object.
     Constructor has same name as the class.
     Constructor has not return type.
     A class can have multiple constructor with different parameters.

What is "this" keyword in java ?
Ans: This operator is used inside the method of the same class to declare  variables that are defined outside of the method.
          this.[variable name]

What is "super" keyword in java?
Ans: For Constructors: Super keywords is to invoke constructor from immediate super class.
     For Variables: Super keywords is to invoke variable from immediate super class.
     For Methods: Super keywords is to invoke method from immediate super class.

What is JVM stand for ?
Ans: Java Virtual Machine

What version of java are you using?
Ans: 1.8

What is JAR stand for ?
Ans: JAR stands for Java Archive

What is compile time and run time?
Ans: During the compile time it shows the syntax error or  missing file reference that will not allow the program fom compile successfully.
     Run time is when the executable is run by a user.

What is heap?
Ans:  Heap is where objects are loaded in RAM

How java manage it's memory?
Ans:  Java has a garbage collector that automatically kills object that is not being used

What is the difference between String, StringBuffer and StringBuilder?
Ans: The String object is immutable(cannot change once it has been created) in Java but StringBuffer and StringBuilder are mutable( can add/change more content) objects.
     StringBuffer is thread-safe-> all the methods are synchronized.
     StringBuilder is NOT thread-safe.(methods are not synchronized)
     Use String if you require immutability
     Use StringBuffer if you need mutability and thread-safety.
     Use StringBuilder if you need mutability but not thread-safety but better performance.
